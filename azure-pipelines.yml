jobs:
  - job: MSVC
    pool:
      vmImage: vs2017-win2016
    steps:
      - task: ChocoInstallPackage@1
        inputs:
          packageId: 'ninja'
        displayName: Install Ninja
      - script: >
          call "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\Tools\\vsdevcmd" -arch=x64 &&
          cmake -GNinja -DRUN_DOCKER_TESTS:BOOL=FALSE -DNO_CI_TEST_DIR:BOOL=FALSE ..
        displayName: Run CMake
        workingDirectory: build
      - script: ninja
        displayName: Run Ninja
        workingDirectory: build
      - script: ctest . --output-on-failure
        displayName: Run tests
        workingDirectory: build

  - job: MinGW
    pool:
      vmImage: vs2017-win2016
    steps:
      - task: ChocoInstallPackage@1
        inputs:
          packageId: 'ninja'
        displayName: Install Ninja
      - script:  cmake -GNinja -DRUN_DOCKER_TESTS:BOOL=FALSE -DNO_CI_TEST_DIR:BOOL=FALSE ..
        displayName: Run CMake
        workingDirectory: build
      - script: ninja
        displayName: Run Ninja
        workingDirectory: build
      - script: ctest . --output-on-failure
        displayName: Run tests
        workingDirectory: build

  - job: LinuxDocker
    pool:
      vmImage: ubuntu-16.04

    steps:
      - script: sudo apt-get install -y python3-venv ninja-build
        displayName: Prepare System
      - script: cmake -GNinja -DRUN_DOCKER_TESTS:BOOL=TRUE -DNO_CI_TEST_DIR:BOOL=TRUE ..
        displayName: Run CMake
        workingDirectory: build
      - script: ninja
        displayName: Run Ninja
        workingDirectory: build
      - script: ctest . --output-on-failure
        displayName: Run Tests
        workingDirectory: build

  - job: macOS
    pool:
      vmImage: macos-10.13
    steps:
      - script: brew install ninja
        displayName: Prepare System
      - script: cmake -GNinja -DRUN_DOCKER_TESTS:BOOL=FALSE -DNO_CI_TEST_DIR:BOOL=FALSE ..
        displayName: Run CMake
        workingDirectory: build
      - script: ninja
        displayName: Run Ninja
        workingDirectory: build
      - script: ctest . --output-on-failure
        displayName: Run Tests
        workingDirectory: build
